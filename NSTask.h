/*
* This header is generated by classdump-dyld 1.0
* on Thursday, September 24, 2020 at 12:47:38 AM British Summer Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/Frameworks/Foundation.framework/Foundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <Foundation/Foundation.h>
@class NSURL, NSArray, NSDictionary;

@interface NSTask : NSObject

@property (copy) NSURL * executableURL; 
@property (copy) NSArray * arguments; 
@property (copy) NSDictionary * environment; 
@property (copy) NSURL * currentDirectoryURL; 
@property (retain) id standardInput; 
@property (retain) id standardOutput; 
@property (retain) id standardError; 
@property (readonly) int processIdentifier; 
@property (getter=isRunning,readonly) BOOL running; 
@property (readonly) int terminationStatus; 
@property (readonly) long long terminationReason; 
@property (copy) id terminationHandler; 
@property (assign) long long qualityOfService; 
+(void)runTaskWithLaunchPath:(id)arg1 arguments:(id)arg2 timeout:(double)arg3 outputData:(id)arg4 errorData:(id)arg5 launchHandler:(/*^block*/id)arg6 reply:(/*^block*/id)arg7 ;
+(void)runTaskWithLaunchPath:(id)arg1 arguments:(id)arg2 timeout:(double)arg3 startBlock:(/*^block*/id)arg4 updateBlock:(/*^block*/id)arg5 endBlock:(/*^block*/id)arg6 ;
+(void)runTaskWithLaunchPath:(id)arg1 arguments:(id)arg2 timeout:(double)arg3 outputFilePath:(id)arg4 errorFilePath:(id)arg5 redirectErrorToOutput:(BOOL)arg6 launchHandler:(/*^block*/id)arg7 reply:(/*^block*/id)arg8 ;
+(void)runTaskWithLaunchPath:(id)arg1 arguments:(id)arg2 timeout:(double)arg3 outputFileHandle:(id)arg4 errorFileHandle:(id)arg5 launchHandler:(/*^block*/id)arg6 reply:(/*^block*/id)arg7 ;
+(BOOL)runTaskWithLaunchPath:(id)arg1 arguments:(id)arg2 timeout:(double)arg3 outputData:(id)arg4 errorData:(id)arg5 launchHandler:(/*^block*/id)arg6 didLaunch:(BOOL*)arg7 error:(id*)arg8 ;
+(BOOL)runTaskWithLaunchPath:(id)arg1 arguments:(id)arg2 timeout:(double)arg3 outputFilePath:(id)arg4 errorFilePath:(id)arg5 redirectErrorToOutput:(BOOL)arg6 launchHandler:(/*^block*/id)arg7 didLaunch:(BOOL*)arg8 error:(id*)arg9 ;
+(BOOL)runTaskWithLaunchPath:(id)arg1 arguments:(id)arg2 timeout:(double)arg3 outputFileHandle:(id)arg4 errorFileHandle:(id)arg5 launchHandler:(/*^block*/id)arg6 didLaunch:(BOOL*)arg7 error:(id*)arg8 ;
+(void)runTaskWithLaunchPath:(id)arg1 arguments:(id)arg2 reply:(/*^block*/id)arg3 ;
+(void)runTaskWithLaunchPath:(id)arg1 arguments:(id)arg2 launchHandler:(/*^block*/id)arg3 reply:(/*^block*/id)arg4 ;
+(void)runTaskWithLaunchPath:(id)arg1 arguments:(id)arg2 outputData:(id)arg3 reply:(/*^block*/id)arg4 ;
+(void)runTaskWithLaunchPath:(id)arg1 arguments:(id)arg2 outputData:(id)arg3 launchHandler:(/*^block*/id)arg4 reply:(/*^block*/id)arg5 ;
+(void)runTaskWithLaunchPath:(id)arg1 arguments:(id)arg2 outputFilePath:(id)arg3 reply:(/*^block*/id)arg4 ;
+(void)runTaskWithLaunchPath:(id)arg1 arguments:(id)arg2 outputFilePath:(id)arg3 launchHandler:(/*^block*/id)arg4 reply:(/*^block*/id)arg5 ;
+(void)runTaskWithLaunchPath:(id)arg1 arguments:(id)arg2 outputFileHandle:(id)arg3 reply:(/*^block*/id)arg4 ;
+(void)runTaskWithLaunchPath:(id)arg1 arguments:(id)arg2 outputFileHandle:(id)arg3 launchHandler:(/*^block*/id)arg4 reply:(/*^block*/id)arg5 ;
+(BOOL)runTaskWithLaunchPath:(id)arg1 arguments:(id)arg2 error:(id*)arg3 ;
+(BOOL)runTaskWithLaunchPath:(id)arg1 arguments:(id)arg2 launchHandler:(/*^block*/id)arg3 didLaunch:(BOOL*)arg4 error:(id*)arg5 ;
+(BOOL)runTaskWithLaunchPath:(id)arg1 arguments:(id)arg2 outputData:(id)arg3 error:(id*)arg4 ;
+(BOOL)runTaskWithLaunchPath:(id)arg1 arguments:(id)arg2 outputData:(id)arg3 launchHandler:(/*^block*/id)arg4 didLaunch:(BOOL*)arg5 error:(id*)arg6 ;
+(BOOL)runTaskWithLaunchPath:(id)arg1 arguments:(id)arg2 outputFilePath:(id)arg3 error:(id*)arg4 ;
+(BOOL)runTaskWithLaunchPath:(id)arg1 arguments:(id)arg2 outputFilePath:(id)arg3 launchHandler:(/*^block*/id)arg4 didLaunch:(BOOL*)arg5 error:(id*)arg6 ;
+(BOOL)runTaskWithLaunchPath:(id)arg1 arguments:(id)arg2 outputFileHandle:(id)arg3 error:(id*)arg4 ;
+(BOOL)runTaskWithLaunchPath:(id)arg1 arguments:(id)arg2 outputFileHandle:(id)arg3 launchHandler:(/*^block*/id)arg4 didLaunch:(BOOL*)arg5 error:(id*)arg6 ;
+(id)launchedTaskWithExecutableURL:(id)arg1 arguments:(id)arg2 error:(out id*)arg3 terminationHandler:(/*^block*/id)arg4 ;
+(id)launchedTaskWithLaunchPath:(id)arg1 arguments:(id)arg2 ;
+(id)launchedTaskWithDictionary:(id)arg1 ;
+(id)currentTaskDictionary;
+(id)allocWithZone:(NSZone*)arg1 ;
-(void)terminate;
-(void)launch;
-(BOOL)isRunning;
-(void)setArguments:(NSArray *)arg1 ;
-(void)setTerminationHandler:(id)arg1 ;
-(long long)suspendCount;
-(NSArray *)arguments;
-(long long)qualityOfService;
-(void)interrupt;
-(id)terminationHandler;
-(id)launchPath;
-(void)setEnvironment:(NSDictionary *)arg1 ;
-(id)standardInput;
-(id)standardError;
-(NSURL *)executableURL;
-(id)currentDirectoryPath;
-(BOOL)isSpawnedProcessDisclaimed;
-(BOOL)suspend;
-(id)init;
-(void)setCurrentDirectoryPath:(id)arg1 ;
-(void)setLaunchPath:(id)arg1 ;
-(id)standardOutput;
-(void)setSpawnedProcessDisclaimed:(BOOL)arg1 ;
-(int)terminationStatus;
-(void)setExecutableURL:(NSURL *)arg1 ;
-(void)setStandardInput:(id)arg1 ;
-(void)setStandardError:(id)arg1 ;
-(BOOL)launchAndReturnError:(id*)arg1 ;
-(void)setStandardOutput:(id)arg1 ;
-(long long)terminationReason;
-(BOOL)resume;
-(NSURL *)currentDirectoryURL;
-(void)setCurrentDirectoryURL:(NSURL *)arg1 ;
-(int)processIdentifier;
-(NSDictionary *)environment;
-(void)setQualityOfService:(long long)arg1 ;
@end

